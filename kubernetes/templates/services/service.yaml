apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME:-${APP_NAME:-my-app}-service}
  namespace: ${NAMESPACE:-default}
  labels:
    app: ${APP_NAME:-my-app}
    version: ${APP_VERSION:-v1.0.0}
    environment: ${ENVIRONMENT:-development}
    tier: ${TIER:-backend}
    component: ${COMPONENT:-api}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: ${AWS_LB_TYPE:-nlb}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ${AWS_LB_BACKEND_PROTOCOL:-http}
    prometheus.io/scrape: "${PROMETHEUS_SCRAPE:-true}"
    prometheus.io/port: "${PROMETHEUS_PORT:-8080}"
    prometheus.io/path: "${PROMETHEUS_PATH:-/metrics}"
spec:
  type: ${SERVICE_TYPE:-ClusterIP}
  sessionAffinity: ${SESSION_AFFINITY:-None}
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: ${SESSION_TIMEOUT:-10800}
  selector:
    app: ${APP_NAME:-my-app}
    version: ${APP_VERSION:-v1.0.0}
  ports:
  - name: http
    port: ${SERVICE_PORT:-80}
    targetPort: ${TARGET_PORT:-8080}
    protocol: TCP
  - name: metrics
    port: ${METRICS_SERVICE_PORT:-9090}
    targetPort: ${METRICS_TARGET_PORT:-9090}
    protocol: TCP
  # 仅在 NodePort 或 LoadBalancer 类型时使用
  # nodePort: ${NODE_PORT:-30080}
  # loadBalancerIP: ${LOAD_BALANCER_IP:-}
  # loadBalancerSourceRanges:
  # - ${LOAD_BALANCER_SOURCE_RANGE:-0.0.0.0/0}
  # externalTrafficPolicy: ${EXTERNAL_TRAFFIC_POLICY:-Cluster}
  # healthCheckNodePort: ${HEALTH_CHECK_NODE_PORT:-}
